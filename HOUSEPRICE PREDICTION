# Import necessary libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load the dataset
# Replace 'house_data.csv' with the path to your dataset
data = pd.read_csv('house_data.csv')

# Preprocessing
# Replace 'SalePrice' with your target column
X = data.drop(['SalePrice'], axis=1)  # Features
y = data['SalePrice']  # Target variable

# Handle missing values (optional, depends on your dataset)
X = X.fillna(X.mean())

# Convert categorical variables to dummy variables
X = pd.get_dummies(X, drop_first=True)

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse}")
print(f"R-squared Score: {r2}")

# Predict a single house price (example)
# Replace [value1, value2, ...] with a feature list for prediction
# Ensure the input has the same columns as the training data
sample = [[2000, 3, 2, 1]]  # Example input
sample_df = pd.DataFrame(sample, columns=X.columns)
price_prediction = model.predict(sample_df)
print(f"Predicted House Price: {price_prediction[0]}")
